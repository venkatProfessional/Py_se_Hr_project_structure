{"name": "test_valid_assignment_permissions", "status": "broken", "statusDetails": {"message": "urllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(10054, 'An existing connection was forcibly closed by the remote host', None, 10054, None))", "trace": ".venv\\lib\\site-packages\\urllib3\\connectionpool.py:787: in urlopen\n    response = self._make_request(\n.venv\\lib\\site-packages\\urllib3\\connectionpool.py:534: in _make_request\n    response = conn.getresponse()\n.venv\\lib\\site-packages\\urllib3\\connection.py:565: in getresponse\n    httplib_response = super().getresponse()\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\http\\client.py:1368: in getresponse\n    response.begin()\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\http\\client.py:317: in begin\n    version, status, reason = self._read_status()\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\http\\client.py:278: in _read_status\n    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\socket.py:705: in readinto\n    return self._sock.recv_into(b)\nE   ConnectionResetError: [WinError 10054] An existing connection was forcibly closed by the remote host\n\nDuring handling of the above exception, another exception occurred:\ntests\\conftest.py:30: in login\n    login_page.login(config[\"username\"], config[\"password\"])\npages\\login_page.py:19: in login\n    self.enter_text(self.EMAIL, username)\npages\\base_page.py:29: in enter_text\n    element = self.wait.until(EC.element_to_be_clickable(locator))\n.venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:129: in until\n    value = method(self._driver)\n.venv\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:624: in _predicate\n    target = driver.find_element(*target)  # grab element at locator\n.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:922: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:451: in execute\n    response = cast(RemoteConnection, self.command_executor).execute(driver_command, params)\n.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\remote_connection.py:404: in execute\n    return self._request(command_info[0], url, body=data)\n.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\remote_connection.py:428: in _request\n    response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)\n.venv\\lib\\site-packages\\urllib3\\_request_methods.py:143: in request\n    return self.request_encode_body(\n.venv\\lib\\site-packages\\urllib3\\_request_methods.py:278: in request_encode_body\n    return self.urlopen(method, url, **extra_kw)\n.venv\\lib\\site-packages\\urllib3\\poolmanager.py:459: in urlopen\n    response = conn.urlopen(method, u.request_uri, **kw)\n.venv\\lib\\site-packages\\urllib3\\connectionpool.py:841: in urlopen\n    retries = retries.increment(\n.venv\\lib\\site-packages\\urllib3\\util\\retry.py:474: in increment\n    raise reraise(type(error), error, _stacktrace)\n.venv\\lib\\site-packages\\urllib3\\util\\util.py:38: in reraise\n    raise value.with_traceback(tb)\n.venv\\lib\\site-packages\\urllib3\\connectionpool.py:787: in urlopen\n    response = self._make_request(\n.venv\\lib\\site-packages\\urllib3\\connectionpool.py:534: in _make_request\n    response = conn.getresponse()\n.venv\\lib\\site-packages\\urllib3\\connection.py:565: in getresponse\n    httplib_response = super().getresponse()\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\http\\client.py:1368: in getresponse\n    response.begin()\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\http\\client.py:317: in begin\n    version, status, reason = self._read_status()\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\http\\client.py:278: in _read_status\n    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\socket.py:705: in readinto\n    return self._sock.recv_into(b)\nE   urllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(10054, 'An existing connection was forcibly closed by the remote host', None, 10054, None))"}, "attachments": [{"name": "log", "source": "6dc90510-bbac-447d-80e8-883c57006988-attachment.txt", "type": "text/plain"}], "start": 1753869704564, "stop": 1753869704564, "uuid": "edd6595a-4f40-416a-b28b-4167e6fb91a2", "historyId": "7bb26052d4c7f8a63330c21002b4fbe7", "testCaseId": "7bb26052d4c7f8a63330c21002b4fbe7", "fullName": "tests.test_DR_AssignmentpermissionPage.TestAssignmentPermission#test_valid_assignment_permissions", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_DR_AssignmentpermissionPage"}, {"name": "subSuite", "value": "TestAssignmentPermission"}, {"name": "host", "value": "DESKTOP-NDHQIMI"}, {"name": "thread", "value": "8960-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_DR_AssignmentpermissionPage"}]}